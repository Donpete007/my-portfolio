
name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:

  build:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: | 
              docker build -t donpete007/portfolio:${{github.run_number}} .
              docker build -t donpete007/portfolio .
      # scan image        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'donpete007/portfolio:${{ github.run_number }}'
          format: 'table'
          exit-code: '1'
          vuln-type: 'os,library'
          severity: 'CRITICAL,MEDIUM'
      
      - name: push images to docker hub
        run: | 
            docker login -u donpete007 -p ${{secrets.REGISTRY_PASS}}
            docker push donpete007/portfolio:${{github.run_number}}
            docker push donpete007/portfolio

      # ðŸ”¹ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # use cat ~/.aws/credentials
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # use cat ~/.aws/credentials
          aws-region: us-east-1  

      # ðŸ”¹ Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # ðŸ”¹ Tag and Push to Amazon ECR
      - name: Push image to Amazon ECR # use "aws sts get-caller-identity" for account ID
        run: |
          AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }} 
          REGION=us-east-1
          ECR_REGISTRY=$AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
          IMAGE_NAME=portfolio
          IMAGE_TAG=${{ github.run_number }}

          # Tag for ECR
          docker tag donpete007/portfolio:$IMAGE_TAG $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
          docker tag donpete007/portfolio $ECR_REGISTRY/$IMAGE_NAME:latest

          # Push to ECR
          docker push $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
          docker push $ECR_REGISTRY/$IMAGE_NAME:latest


        

  deploy: 
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: SSH to Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          # port: ${{ secrets.PORT }}
          script: |
                  docker rm -f resume
                  docker run -d --name resume -p 8080:5001 donpete007/portfolio:${{github.run_number}}
